buildscript {
    ext {
        springBootVersion = '1.5.8.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

group = 'tech.plateauu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

ext {
    spockFrameworkVersion = '1.1-groovy-2.4'
    guavaVersion = '23.4-jre'
    hibernateVersion = "5.2.4.Final"
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-actuator-docs')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.hibernate:hibernate-core:${hibernateVersion}")
    compile("com.google.guava:guava:${guavaVersion}")

    runtime('com.h2database:h2')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile("org.spockframework:spock-core:${spockFrameworkVersion}")
    testCompile("org.spockframework:spock-spring:${spockFrameworkVersion}")

}

compileJava.dependsOn(processResources)
compileJava {
    doLast {
        file("${projectDir}/src/main/groovy").deleteDir()
    }
}

project.buildDir = 'build'

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        groovy {
            srcDir 'src/test/groovy'
        }
        resources {
            srcDir 'src/test/resources'
        }
    }
}

task checkSource {
    println "src ${sourceSets}"
    println "src ${sourceSets.namer}"
    println "src ${sourceSets.asMap}"
    println "src ${sourceSets.findByName('main').java.sourceDirectories}"
    println "output ${sourceSets.findByName('main').output.classesDir}"
    println "src ${sourceSets.findByName('main')?.resources.files}"
    println "src dirs ${project.getRootProject()}"
}
